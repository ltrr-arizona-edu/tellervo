/*******************************************************************************
 * Copyright (C) 2011 Dan Girshovich and Peter Brewer.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * Contributors:
 *     Dan Girshovich
 *     Peter Brewer
 ******************************************************************************/
package org.tellervo.desktop.admin.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;

import javax.swing.JTextField;
import javax.swing.JLabel;
import net.miginfocom.swing.MigLayout;
import javax.swing.JPanel;
import javax.swing.JCheckBox;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.tellervo.desktop.admin.model.SecurityMixTableModelB;
import org.tellervo.desktop.dictionary.Dictionary;
import org.tellervo.schema.TellervoRequestType;
import org.tellervo.schema.PermissionsEntityType;
import org.tellervo.schema.WSIPermission;
import org.tellervo.schema.WSISecurityGroup;
import org.tellervo.schema.WSIPermission.Entity;
import org.tellervo.desktop.ui.Alert;
import org.tellervo.desktop.ui.Builder;
import org.tellervo.desktop.wsi.tellervo.TellervoResourceAccessDialog;
import org.tellervo.desktop.wsi.tellervo.resources.PermissionsResource;
import org.tellervo.desktop.wsi.tellervo.resources.SecurityGroupEntityResource;

import java.awt.FlowLayout;
import java.io.Serializable;




/**
 * GUI Class for viewing/editing a groups details.
 * 
 * @author  Dan Girshovich
 */
public class GroupUIView extends javax.swing.JDialog implements ActionListener, MouseListener{
    
	private static final long serialVersionUID = 1L;
	WSISecurityGroup group = new WSISecurityGroup();
	WSIPermission defaultPermissions = null;
	Boolean isNewGroup = true;
	private SecurityMixTableModelB groupsModel;
	private TableRowSorter<SecurityMixTableModelB> groupsSorter;
	private final static Logger log = LoggerFactory.getLogger(GroupUIView.class);

	
    /** Creates new form GroupUI 
     * @wbp.parser.constructor*/
    public GroupUIView(JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
    	isNewGroup = true;
        setupGUI();

    }
    
    public GroupUIView(JDialog parent, boolean modal, WSISecurityGroup group) {
        super(parent, modal);
        this.group = group;
        initComponents();
    	isNewGroup = false;
    	setupGUI();

    }
    
    public GroupUIView(JDialog parent, boolean modal, WSISecurityGroup group, WSIPermission perm) {
        super(parent, modal);
        this.group = group;
        this.defaultPermissions = perm;
        initComponents();
    	isNewGroup = false;
    	setupGUI();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    @SuppressWarnings("serial")
	private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblGroup = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        scrollPane = new javax.swing.JScrollPane();
        tblGroups = new javax.swing.JTable();

        jLabel1.setText("jLabel1");

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblGroup.setText("Group name:");

        tblGroups.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Group", "Description", "Member"
            }
        ) 
        
        
        
        {
			@SuppressWarnings("rawtypes")
			Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };


			public Class<?> getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        scrollPane.setViewportView(tblGroups);
        txtDescription = new JTextField();
        txtDescription.setColumns(10);
        
        JLabel lblDescription = new JLabel("Description:");
        getContentPane().setLayout(new MigLayout("", "[82px][145.00px,grow][154.00px][78px:78.00:78px]", "[23px][19px][19px][center][200px,grow,top][25px]"));
        chkEnabled = new javax.swing.JCheckBox();
        
                chkEnabled.setText("Enabled");
                getContentPane().add(chkEnabled, "cell 1 0,alignx left,aligny top");
        
        lblIcon = new JLabel("");
        getContentPane().add(lblIcon, "cell 3 0 1 3,alignx center");
        lblIcon.setIcon(Builder.getIcon("edit_group.png", 64));
        lblIcon.setSize(70, 70);
        
        lblDefaultPermissions = new JLabel("Default Permissions:");
        getContentPane().add(lblDefaultPermissions, "cell 0 3");
        
        panelPermissions = new JPanel();
        getContentPane().add(panelPermissions, "cell 1 3 3 1,grow");
        panelPermissions.setLayout(new MigLayout("", "[][][][][]", "[]"));
        
        chckbxCreate = new JCheckBox("Create");
        panelPermissions.add(chckbxCreate, "cell 0 0");
        
        chckbxRead = new JCheckBox("Read");
        panelPermissions.add(chckbxRead, "cell 1 0");
        
        chckbxUpdate = new JCheckBox("Update");
        panelPermissions.add(chckbxUpdate, "cell 2 0");
        
        chckbxDelete = new JCheckBox("Delete");
        panelPermissions.add(chckbxDelete, "cell 3 0");
        
        chckbxDenied = new JCheckBox("Denied");
        
        chckbxDenied.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent arg0) {
				setCheckBoxes();
			}
        	
        });
        
        
        panelPermissions.add(chckbxDenied, "cell 4 0");
        
        lblMemberOf = new JLabel("List of members:");
        getContentPane().add(lblMemberOf, "cell 0 4,alignx right");
        txtId = new javax.swing.JTextField();
        
                txtId.setEditable(false);
                getContentPane().add(txtId, "cell 0 5 2 1,growx,aligny center");
        
        panel = new JPanel();
        getContentPane().add(panel, "cell 2 5 2 1,alignx right,growy");
        panel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        btnDoIt = new javax.swing.JButton();
        panel.add(btnDoIt);
        
                btnDoIt.setText("Apply");
                btnClose = new javax.swing.JButton();
                panel.add(btnClose);
                
                        btnClose.setText("OK");
        getContentPane().add(lblGroup, "cell 0 1,alignx right,aligny center");
        getContentPane().add(lblDescription, "cell 0 2,alignx right,aligny center");
        getContentPane().add(txtDescription, "cell 1 2 2 1,growx,aligny center");
        getContentPane().add(txtName, "cell 1 1 2 1,growx,aligny center");
        getContentPane().add(scrollPane, "cell 1 4 3 1,grow");

        pack();
        setCheckBoxes();
    }// </editor-fold>//GEN-END:initComponents
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton btnClose;
    protected javax.swing.JButton btnDoIt;
    protected javax.swing.JCheckBox chkEnabled;
    protected javax.swing.JLabel jLabel1;
    protected javax.swing.JLabel jLabel3;
    protected javax.swing.JLabel lblGroup;
    protected javax.swing.JScrollPane scrollPane;
    protected javax.swing.JTable tblGroups;
    protected javax.swing.JTextField txtId;
    protected javax.swing.JTextField txtName;
    protected JTextField txtDescription;
    private JPanel panel;
    private JLabel lblIcon;
    private JPanel panelPermissions;
    private JCheckBox chckbxCreate;
    private JCheckBox chckbxRead;
    private JCheckBox chckbxUpdate;
    private JCheckBox chckbxDelete;
    private JCheckBox chckbxDenied;
    private JLabel lblDefaultPermissions;
    private JLabel lblMemberOf;

    // End of variables declaration//GEN-END:variables
 
    private void setCheckBoxes()
    {
    	
    	if(chckbxDenied.isSelected())
    	{
    		chckbxCreate.setSelected(false);
    		chckbxRead.setSelected(false);
    		chckbxUpdate.setSelected(false);
    		chckbxDelete.setSelected(false);
    	}
    	
		chckbxCreate.setEnabled(!chckbxDenied.isSelected());
		chckbxRead.setEnabled(!chckbxDenied.isSelected());
		chckbxUpdate.setEnabled(!chckbxDenied.isSelected());
		chckbxDelete.setEnabled(!chckbxDenied.isSelected());
		
    }
    
    private void setPermissionsFromWS()
    {
		
		// Query db 
    	
		PermissionsResource resource = new PermissionsResource(PermissionsEntityType.DEFAULT, null, group);
		

		TellervoResourceAccessDialog dialog = new TellervoResourceAccessDialog(resource);
		resource.query();	
		dialog.setVisible(true);
		
		if(!dialog.isSuccessful()) 
		{ 
			Alert.error("Error", "Error getting permissions info");
			return;
		}
		
		ArrayList<WSIPermission> list = resource.getAssociatedResult();
		
		this.defaultPermissions = list.get(0);
    }
    
    @SuppressWarnings("unchecked")
	private void setupGUI()
    {
    	this.setLocationRelativeTo(getRootPane());
    	this.txtId.setVisible(false);
    	
    	    	
    	this.tblGroups.addMouseListener(this);

    	if(isNewGroup)
    	{
        	this.setTitle("Create group");
        	btnDoIt.setText("Create");
        	btnClose.setText("Close");
        	chkEnabled.setSelected(true);
        	if(defaultPermissions==null) 
        	{
        		defaultPermissions = new WSIPermission();
				
        		// Set entitiy details for permissions
				Entity entity = new Entity();
				entity.setType(PermissionsEntityType.DEFAULT);		
				ArrayList<Entity> entities = new ArrayList<Entity>();
				entities.add(entity);
				defaultPermissions.setEntities(entities);
        	}
    	}
    	else
    	{
        	this.setTitle("Edit group");
        	btnDoIt.setText("Apply");
        	btnClose.setText("Close");
        	
        	if(defaultPermissions==null)
        	{
        		setPermissionsFromWS();
        	}
        	
        	// Set values of forms according to group
	    	if(group.isSetName()) txtName.setText(group.getName());
	    	if(group.isSetId()) 		  txtId.setText(group.getId());
	    	if(group.isSetName())  txtName.setText(group.getName());
	    	if(group.isSetDescription()) txtDescription.setText(group.getDescription());
	    	if(group.isSetIsActive())  chkEnabled.setSelected(group.isIsActive());
	    	
	    	//Set values of forms from permissions
	    	if(defaultPermissions!=null)
	    	{
		    	this.chckbxCreate.setSelected(defaultPermissions.isPermissionToCreate());
		    	this.chckbxRead.setSelected(defaultPermissions.isPermissionToRead());
		    	this.chckbxUpdate.setSelected(defaultPermissions.isPermissionToUpdate());
		    	this.chckbxDelete.setSelected(defaultPermissions.isPermissionToDelete());
		    	this.chckbxDenied.setSelected(defaultPermissions.isPermissionDenied());
	    	}

    		// If this is the Admin group disable changes to most parts of form
    		this.chkEnabled.setEnabled(!group.getId().equals("1"));
    		this.txtName.setEditable(!group.getId().equals("1"));
    		this.txtName.setFocusable(!group.getId().equals("1"));
    		this.txtDescription.setEditable(!group.getId().equals("1"));
    		this.txtDescription.setFocusable(!group.getId().equals("1"));
    		this.chckbxCreate.setEnabled(!group.getId().equals("1"));
    		this.chckbxRead.setEnabled(!group.getId().equals("1"));
    		this.chckbxUpdate.setEnabled(!group.getId().equals("1"));
    		this.chckbxDelete.setEnabled(!group.getId().equals("1"));
    		this.chckbxDenied.setEnabled(!group.getId().equals("1"));  		
    	}
    	
        // Populate groups list
        ArrayList<WSISecurityGroup> lstofGroups = (ArrayList<WSISecurityGroup>) Dictionary.getDictionaryAsArrayList("securityGroupDictionary");  
        groupsModel = new SecurityMixTableModelB(group);
        tblGroups.setModel(groupsModel);
        groupsSorter = new TableRowSorter<SecurityMixTableModelB>(groupsModel);
        tblGroups.setRowSorter(groupsSorter);
        tblGroups.setEditingColumn(3);
    	
    	this.btnDoIt.addActionListener(this);
    	this.btnClose.addActionListener(this);
    	
    }

	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource()==this.btnClose) 
		{
			this.dispose();
		}	
		else if (e.getSource()==this.btnDoIt)
		{
			saveChangesToGroup();
		}
	}
	
	private void saveChangesToGroup()
	{
		group.setName(txtName.getText());
		group.setIsActive(this.chkEnabled.isSelected());
		group.setDescription(this.txtDescription.getText());
		defaultPermissions.setPermissionDenied(this.chckbxDenied.isSelected());
		defaultPermissions.setPermissionToCreate(this.chckbxCreate.isSelected());
		defaultPermissions.setPermissionToRead(this.chckbxRead.isSelected());
		defaultPermissions.setPermissionToUpdate(this.chckbxUpdate.isSelected());
		defaultPermissions.setPermissionToDelete(this.chckbxDelete.isSelected());		
		
		if(defaultPermissions.isSetEntities()==false)
		{
			log.debug("Permissions has no entitie set");
		}
		
		if(isNewGroup)
		{
			// associate a resource
	    	SecurityGroupEntityResource rsrc = new SecurityGroupEntityResource(TellervoRequestType.CREATE, group);
	    	
			TellervoResourceAccessDialog accdialog = new TellervoResourceAccessDialog(this, rsrc);
			rsrc.query();
			accdialog.setVisible(true);
			
			if(accdialog.isSuccessful())
			{
				WSISecurityGroup res = rsrc.getAssociatedResult();
				
				ArrayList<Object> securityGroups = new ArrayList<Object>();
				securityGroups.add(res);
				defaultPermissions.setSecurityUsersAndSecurityGroups(securityGroups);
			}
			else
			{
				JOptionPane.showMessageDialog(this, "Error creating group.  Make sure the groupname is unique." + accdialog.getFailException().
					getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
				return;
			}

		}
		else 
		{
			// Editing existing group
			
			// associate a resource
	    	SecurityGroupEntityResource rsrc = new SecurityGroupEntityResource(TellervoRequestType.UPDATE, group);
	    	
			TellervoResourceAccessDialog accdialog = new TellervoResourceAccessDialog(this, rsrc);
			rsrc.query();
			accdialog.setVisible(true);
			
			if(accdialog.isSuccessful())
			{
				rsrc.getAssociatedResult();
			}
			else
			{
				JOptionPane.showMessageDialog(this, "Error updating group: " + accdialog.getFailException().
						getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
				return;
			}
		}
		
		// Now set the default permissions
		PermissionsResource resource = new PermissionsResource(defaultPermissions);
		TellervoResourceAccessDialog dialog = new TellervoResourceAccessDialog(resource);
		resource.query();	
		dialog.setVisible(true);
		
		if(!dialog.isSuccessful()) 
		{ 
			Alert.error("Error", "Error setting permissions info");
			return;
		}
		
		dispose();
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		if(e.getClickCount()>1)
		{
			// Double clicked on groups table - change groups membership accordingly
			Boolean isMember = (Boolean) this.groupsModel.getValueAt(this.tblGroups.getSelectedRow(), 3);
			
//			if(isMember)
//			{
//				groupsModel.setMembershipAt(this.tblGroups.getSelectedRow(), false);
//			}
//			else
//			{
//				groupsModel.setMembershipAt(this.tblGroups.getSelectedRow(), true);
//
//			}
			this.tblGroups.repaint();
		}
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
}
